# -- coding: utf-8 --

# Form implementation generated from reading ui file 'C:\Users\yalda_soft\desktop\untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5.QtWidgets import (QWidget, QPushButton, QLineEdit, QInputDialog, QApplication, QLabel)
import sqlite3
import os
from PyQt5 import QtCore, QtGui, QtWidgets
from time import sleep
import tkinter
from tkinter import messagebox

class Ui_MainWindow(QWidget):
    def setupUi(self, MainWindow):
        self.abbs = True
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.resize(666, 532)
        font = QtGui.QFont()
        font.setPointSize(12)
        MainWindow.setFont(font)
        MainWindow.setLayoutDirection(QtCore.Qt.RightToLeft)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setInputMethodHints(QtCore.Qt.ImhDialableCharactersOnly|QtCore.Qt.ImhDigitsOnly|QtCore.Qt.ImhEmailCharactersOnly|QtCore.Qt.ImhFormattedNumbersOnly|QtCore.Qt.ImhLatinOnly|QtCore.Qt.ImhLowercaseOnly|QtCore.Qt.ImhUppercaseOnly|QtCore.Qt.ImhUrlCharactersOnly)
        MainWindow.setDocumentMode(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.radioButton = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton.setEnabled(True)
        self.radioButton.setGeometry(QtCore.QRect(540, 0, 82, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setStrikeOut(False)
        self.radioButton.setFont(font)
        self.radioButton.setTabletTracking(False)
        self.radioButton.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.radioButton.setAcceptDrops(False)
        self.radioButton.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.radioButton.setChecked(True)
        self.radioButton.setAutoRepeat(False)
        self.radioButton.setAutoExclusive(True)
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_2.setGeometry(QtCore.QRect(540, 100, 82, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_3.setGeometry(QtCore.QRect(520, 50, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.radioButton_3.setObjectName("radioButton_3")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setEnabled(True)
        self.label.setGeometry(QtCore.QRect(340, 40, 91, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setToolTip("")
        self.label.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label.setAutoFillBackground(False)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setOpenExternalLinks(False)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setEnabled(True)
        self.label_2.setGeometry(QtCore.QRect(340, 100, 91, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setToolTip("")
        self.label_2.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label_2.setAutoFillBackground(False)
        self.label_2.setTextFormat(QtCore.Qt.AutoText)
        self.label_2.setOpenExternalLinks(False)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setEnabled(True)
        self.label_3.setGeometry(QtCore.QRect(310, 150, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_3.setFont(font)
        self.label_3.setToolTip("")
        self.label_3.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label_3.setAutoFillBackground(False)
        self.label_3.setTextFormat(QtCore.Qt.AutoText)
        self.label_3.setOpenExternalLinks(False)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setEnabled(True)
        self.label_4.setGeometry(QtCore.QRect(340, 210, 91, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setToolTip("")
        self.label_4.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label_4.setAutoFillBackground(False)
        self.label_4.setTextFormat(QtCore.Qt.AutoText)
        self.label_4.setOpenExternalLinks(False)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setEnabled(True)
        self.label_5.setGeometry(QtCore.QRect(340, 270, 91, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_5.setFont(font)
        self.label_5.setToolTip("")
        self.label_5.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label_5.setAutoFillBackground(False)
        self.label_5.setTextFormat(QtCore.Qt.AutoText)
        self.label_5.setOpenExternalLinks(False)
        self.label_5.setObjectName("label_5")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setEnabled(True)
        self.lineEdit.setGeometry(QtCore.QRect(50, 30, 251, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit.setFont(font)
        self.lineEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.lineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit.setInputMethodHints(QtCore.Qt.ImhFormattedNumbersOnly)
        self.lineEdit.setText("")
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(50, 210, 251, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.comboBox.setFont(font)
        self.comboBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.comboBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.comboBox.setInputMethodHints(QtCore.Qt.ImhNone)
        self.comboBox.setEditable(False)
        self.comboBox.setDuplicatesEnabled(False)
        self.comboBox.setFrame(True)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setEnabled(True)
        self.label_6.setGeometry(QtCore.QRect(380, 320, 241, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_6.setFont(font)
        self.label_6.setToolTip("")
        self.label_6.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label_6.setAutoFillBackground(False)
        self.label_6.setTextFormat(QtCore.Qt.AutoText)
        self.label_6.setOpenExternalLinks(False)
        self.label_6.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.label_6.setObjectName("label_6")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(50, 90, 251, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.lineEdit_2.setText("")
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(50, 150, 251, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.lineEdit_3.setText("")
        self.lineEdit_3.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(300, 410, 331, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.progressBar.setFont(font)
        self.progressBar.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.progressBar.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setTextVisible(True)
        self.progressBar.setOrientation(QtCore.Qt.Horizontal)
        self.progressBar.setObjectName("progressBar")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setEnabled(True)
        self.lineEdit_4.setGeometry(QtCore.QRect(50, 269, 251, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_4.sizePolicy().hasHeightForWidth())
        self.lineEdit_4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setTabletTracking(False)
        self.lineEdit_4.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.lineEdit_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_4.setAutoFillBackground(False)
        self.lineEdit_4.setInputMethodHints(QtCore.Qt.ImhFormattedNumbersOnly)
        self.lineEdit_4.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_4.setDragEnabled(False)
        self.lineEdit_4.setReadOnly(False)
        self.lineEdit_4.setPlaceholderText("")
        self.lineEdit_4.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.lineEdit_4.setClearButtonEnabled(True)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(90, 350, 101, 41))
        self.pushButton.setDefault(True)
        self.pushButton.setFlat(False)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(200, 350, 101, 41))
        self.pushButton_2.setDefault(True)
        self.pushButton_2.setFlat(False)
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(450, 450, 181, 20))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(430, 450, 181, 20))
        self.label_8.setObjectName("label_8")
        self.radioButton_4 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_4.setGeometry(QtCore.QRect(531, 190, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.radioButton_4.setFont(font)
        self.radioButton_4.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.radioButton_4.setObjectName("radioButton_4")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(467, 170, 191, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.comboBox.raise_()
        self.lineEdit.raise_()
        self.lineEdit_2.raise_()
        self.lineEdit_3.raise_()
        self.lineEdit_4.raise_()
        self.radioButton.raise_()
        self.radioButton_3.raise_()
        self.radioButton_2.raise_()
        self.radioButton_4.raise_()
        self.label.raise_()
        self.label_2.raise_()
        self.label_3.raise_()
        self.label_4.raise_()
        self.label_5.raise_()
        self.label_6.raise_()
        self.progressBar.raise_()
        self.pushButton.raise_()
        self.pushButton_2.raise_()
        self.label_7.raise_()
        self.label_8.raise_()
        self.line.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 666, 27))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setCheckable(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("ball_green.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.action.setIcon(icon)
        self.action.setObjectName("action")
        self.menu.addAction(self.action)
        self.menubar.addAction(self.menu.menuAction())
        self.retranslateUi(MainWindow)
        self.pushButton.clicked.connect(self.ali)
        self.pushButton_2.clicked.connect(self.lineEdit_2.clear)
        self.action.changed.connect(MainWindow.close)
        self.pushButton_2.clicked.connect(self.lineEdit_3.clear)
        self.pushButton_2.clicked.connect(self.lineEdit_4.clear)
        self.pushButton_2.clicked.connect(self.lineEdit.clear)
        self.pushButton_2.clicked.connect(self.reza)
        self.radioButton_2.clicked.connect(self.showDialog)
        self.radioButton_3.clicked.connect(self.showDialog3)
        self.radioButton_4.clicked.connect(self.srch)
        self.radioButton.clicked.connect(self.ss)
        self.radioButton.clicked.connect(self.showDialog2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.radioButton, self.radioButton_3)
        MainWindow.setTabOrder(self.radioButton_3, self.radioButton_2)
    def ss(self):
        self.abbs = True
    def showDialog2(self):
        self.pushButton.setText('ثبت')
        self.pushButton.setEnabled(True)
    def retranslateUi(self, MainWindow):
        conn = sqlite3.connect("E:\db\db.db")
        cur = conn.cursor()
        cur.execute("Select count(*) from  adam", )
        for row in cur:
            pass
        conn.close()
        name = str(row[0])
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "بهروز اشرف"))
        self.radioButton.setText(_translate("MainWindow", "ثبت"))
        self.radioButton_2.setText(_translate("MainWindow", "حذف"))
        self.radioButton_3.setText(_translate("MainWindow", "ویرایش"))
        self.label.setText(_translate("MainWindow", "کد عاملیت"))
        self.label_2.setText(_translate("MainWindow", "نام"))
        self.label_3.setText(_translate("MainWindow", "نام خانوادگی"))
        self.label_4.setText(_translate("MainWindow", "جنسیت"))
        self.label_5.setText(_translate("MainWindow", "کد ملی"))
        self.comboBox.setToolTip(_translate("MainWindow", "از لیست کشویی گزینه ای انتخاب کنید"))
        self.comboBox.setItemText(0, _translate("MainWindow", "مرد"))
        self.comboBox.setItemText(1, _translate("MainWindow", "زن"))
        self.comboBox.setItemText(2, _translate("MainWindow", "دوجنسه"))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">پر کردن تمام فیلدها الزامیست</span></p></body></html>"))
        self.progressBar.setFormat(_translate("MainWindow", "%p%"))
        self.pushButton.setText(_translate("MainWindow", "ثبت"))
        self.pushButton_2.setText(_translate("MainWindow", "ازنو"))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\"><span style=\" color:#0000ff;\">تعداد عاملین ثبت شده</span></p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p align=\"left\"><span style=\" color:#550000;\">%s</span></p></body></html>"% (name)))
        self.radioButton_4.setText(_translate("MainWindow", "جستجو"))
        self.menu.setTitle(_translate("MainWindow", "خروج"))
        self.action.setText(_translate("MainWindow", "خروج"))
        self.action.setShortcut(_translate("MainWindow", "Ctrl+X"))

    def srch(self):
        conn = sqlite3.connect("E:\db\db.db")
        cur = conn.cursor()
        cur.execute("Select count(*) from  adam", )
        for row in cur:
            pass
        conn.close()
        name = str(row[0])
        if name!='0':
            os.system('python E:\db\qInput.py')
        else:
            root = tkinter.Tk()
            root.withdraw()
            messagebox.showerror("خطا", "عاملی ثبت نشده")
        self.radioButton.setChecked(True)
        self.pushButton.setText('ثبت')
        self.pushButton.setEnabled(True)
        self.abbs = True

    def showDialog3(self):
        self.abbs = False
        self.pushButton.setText('ویرایش')
        self.pushButton.setEnabled(True)
        text, ok = QInputDialog.getText(self, 'ویرایش عامل', 'کد عامل مورد نظر را وارد کنید:')
        if ok:
            conn = sqlite3.connect("E:\db\db.db")
            cur = conn.cursor()
            cur.execute("Select * from adam where code='%s'" % (text))
            rows = cur.fetchall()
            hagh = False
            for row in rows:
                self.lineEdit.setText(str(row[1]))
                self.lineEdit_2.setText(str(row[2]))
                self.lineEdit_3.setText(str(row[3]))
                self.lineEdit_4.setText(str(row[5]))
                item = str(row[4])
                hagh=True
            conn.close()
            if hagh==True:
                self.comboBox.setCurrentText(item)

    def showDialog(self):
        self.pushButton.setEnabled(False)
        text, ok = QInputDialog.getText(self, 'حذف عامل', 'کد عامل مورد نظر را وارد کنید:')
        if ok:
            tix=str(text)
            sqliteConnection = sqlite3.connect('E:\db\db.db')
            cursor = sqliteConnection.cursor()
            sqlite_insert_query = ("DELETE FROM adam WHERE code='%s'"%(tix) )
            count = cursor.execute(sqlite_insert_query)
            sqliteConnection.commit()
            cursor.close()
            for i in range(11):
                i *= 10
                sleep(0.05)
                self.progressBar.setProperty("value", i)
            sleep(0.2)
            self.progressBar.setProperty("value", 0)
            conn = sqlite3.connect("E:\db\db.db")
            cur = conn.cursor()
            cur.execute("Select count(*) from  adam", )
            for row in cur:
                pass
            conn.close()
            self.label_8.setText(str(row[0]))

    def reza(self):
        self.abbs = True
        self.comboBox.setCurrentText('مرد')
        self.pushButton.setEnabled(True)
        self.radioButton.setChecked(True)
        self.progressBar.setProperty("value", 0)
        self.pushButton.setText('ثبت')
        conn = sqlite3.connect("E:\db\db.db")
        cur = conn.cursor()
        cur.execute("Select count(*) from  adam", )
        for row in cur:
            pass
        conn.close()
        self.label_8.setText(str(row[0]))

    def ali(self):
        num=self.lineEdit.text()
        esm=self.lineEdit_2.text()
        oesm=self.lineEdit_3.text()
        jens=self.comboBox.currentText()
        melat=self.lineEdit_4.text()
        if (num == '' or esm == '' or oesm == '' or jens == '' or melat == ''):
            pass
        else:
            if (self.abbs == True):
                conn = sqlite3.connect("E:\db\db.db")
                cur = conn.cursor()
                bb = False
                cur.execute("Select code from adam where code='%s'" %(num))
                rows = cur.fetchall()
                for row in rows:
                    if row!='':
                        bb=True
                if bb == True:
                    root = tkinter.Tk()
                    root.withdraw()
                    messagebox.showerror("خطا", "کد عاملیت تکراری")
                if bb==False:
                    sqliteConnection = sqlite3.connect('E:\db\db.db')
                    cursor = sqliteConnection.cursor()
                    sqlite_insert_query = '''
                    INSERT INTO adam
                    (code, name, family, sex, meli) 
                    VALUES 
                    ("'''+num+'''","'''+esm+'''","'''+oesm+'''","'''+jens+'''","'''+melat+'''")
                    '''
                    count = cursor.execute(sqlite_insert_query)
                    sqliteConnection.commit()
                    cursor.close()
                    for i in range(11):
                        i*=10
                        sleep(0.05)
                        self.progressBar.setProperty("value", i)
                    sleep(0.2)
                    self.progressBar.setProperty("value", 0)
                    conn= sqlite3.connect ("E:\db\db.db")
                    cur = conn.cursor()
                    cur.execute("Select count(*) from  adam", )
                    for row in cur:
                        pass
                    conn.close()
                    self.comboBox.setCurrentText('مرد')
                    self.label_8.setText(str(row[0]))
                    self.lineEdit_2.setText('')
                    self.lineEdit_4.setText('')
                    self.lineEdit_3.setText('')
                    self.lineEdit.setText('')
            else:
                conn = sqlite3.connect("E:\db\db.db")
                cur = conn.cursor()
                cur.execute("Select count(code) from adam where code='%s'" % (num))
                rows = cur.fetchall()
                rows = rows[0]
                rows = rows[0]
                if rows == 0:
                    root = tkinter.Tk()
                    root.withdraw()
                    messagebox.showerror("خطا", "چنین عاملی ثبت نشده")
                else:
                    sqliteConnection = sqlite3.connect('E:\db\db.db')
                    cursor = sqliteConnection.cursor()
                    sqlite_insert_query = '''
Update adam set name = 
"'''+esm+'''", family = "'''+oesm+'''", sex = "'''+jens+'''", meli = 
"'''+melat+'''" where code = "%s"''' % (num)
                    cursor.execute(sqlite_insert_query)
                    sqliteConnection.commit()
                    cursor.close()
                    for i in range(11):
                        i*=10
                        sleep(0.05)
                        self.progressBar.setProperty("value", i)
                    sleep(0.2)
                    self.progressBar.setProperty("value", 0)
                    self.reza()
                    self.lineEdit_2.setText('')
                    self.lineEdit_4.setText('')
                    self.lineEdit_3.setText('')
                    self.lineEdit.setText('')
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())